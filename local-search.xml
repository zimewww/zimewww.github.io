<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>大雪球（hdu7409）</title>
    <link href="/2024/11/12/%E5%A4%A7%E9%9B%AA%E7%90%83%EF%BC%88hdu7409%EF%BC%89/"/>
    <url>/2024/11/12/%E5%A4%A7%E9%9B%AA%E7%90%83%EF%BC%88hdu7409%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-keyword">typedef</span> <span class="hljs-type">long</span> <span class="hljs-type">long</span> LL;<br><span class="hljs-keyword">typedef</span> pair&lt;<span class="hljs-type">int</span>, <span class="hljs-type">int</span>&gt; PII;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> N = <span class="hljs-number">1e5</span> + <span class="hljs-number">5</span>;<br>LL n, k, a[N];<br><br><span class="hljs-function"><span class="hljs-type">bool</span> <span class="hljs-title">check</span><span class="hljs-params">(LL x)</span> </span>&#123;<br>    LL cnt = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++) &#123;<br>        LL y = x - a[i];<br>        LL pos = <span class="hljs-built_in">upper_bound</span>(a + <span class="hljs-number">1</span>, a + <span class="hljs-number">1</span> + n, y) - a;<br>        LL cur = pos - i - <span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">if</span> (cur &gt; <span class="hljs-number">0</span>) cnt += cur;<br>    &#125;<br>    <span class="hljs-keyword">return</span> cnt &gt;= k;<br>&#125;<br><br><span class="hljs-function">LL <span class="hljs-title">ef</span><span class="hljs-params">()</span> </span>&#123;<br>    LL ll = <span class="hljs-number">1</span>, rr = <span class="hljs-number">2e9</span>;<br>    <span class="hljs-keyword">while</span> (ll &lt; rr) &#123;<br>        <span class="hljs-type">int</span> mid = ll + rr &gt;&gt; <span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">check</span>(mid)) rr = mid;<br>        <span class="hljs-keyword">else</span> ll = mid + <span class="hljs-number">1</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> ll;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">sovle</span><span class="hljs-params">()</span> </span>&#123;<br>    cin &gt;&gt; n;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; ++i)cin &gt;&gt; a[i];<br>    <span class="hljs-built_in">sort</span>(a + <span class="hljs-number">1</span>, a + <span class="hljs-number">1</span> + n);<br>    cin &gt;&gt; k;<br>    cout &lt;&lt; <span class="hljs-built_in">ef</span>() &lt;&lt; <span class="hljs-string">&quot;\n&quot;</span>;<br><br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>    cin.<span class="hljs-built_in">tie</span>(<span class="hljs-literal">nullptr</span>);<br>    <span class="hljs-type">int</span> tt = <span class="hljs-number">1</span>;<br>    cin &gt;&gt; tt;<br>    <span class="hljs-keyword">while</span> (tt--)<span class="hljs-built_in">sovle</span>();<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>计算机</category>
      
      <category>算法竞赛</category>
      
      <category>查询算法</category>
      
      <category>二分查找</category>
      
    </categories>
    
    
    <tags>
      
      <tag>二分</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>每次选L个数字减一，最多选几次</title>
    <link href="/2024/11/12/%E6%AF%8F%E6%AC%A1%E9%80%89L%E4%B8%AA%E6%95%B0%E5%AD%97%E5%87%8F%E4%B8%80%EF%BC%8C%E6%9C%80%E5%A4%9A%E9%80%89%E5%87%A0%E6%AC%A1/"/>
    <url>/2024/11/12/%E6%AF%8F%E6%AC%A1%E9%80%89L%E4%B8%AA%E6%95%B0%E5%AD%97%E5%87%8F%E4%B8%80%EF%BC%8C%E6%9C%80%E5%A4%9A%E9%80%89%E5%87%A0%E6%AC%A1/</url>
    
    <content type="html"><![CDATA[<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-keyword">typedef</span> <span class="hljs-type">long</span> <span class="hljs-type">long</span> LL;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> N = <span class="hljs-number">2e5</span> + <span class="hljs-number">5</span>;<br><span class="hljs-type">int</span> n, L;<br>LL a[N];<br><br><span class="hljs-function"><span class="hljs-type">bool</span> <span class="hljs-title">ck</span><span class="hljs-params">(LL x)</span> </span>&#123;<br>    LL sum = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; ++i)sum += <span class="hljs-built_in">min</span>(a[i], x);<br>    <span class="hljs-keyword">return</span> x * L &lt; sum;<br>&#125;<br><br><span class="hljs-function">LL <span class="hljs-title">ef</span><span class="hljs-params">(LL ll, LL rr)</span> </span>&#123;<br>    <span class="hljs-keyword">while</span> (ll &lt; rr) &#123;<br>        LL mid = (ll + rr) &gt;&gt; <span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">ck</span>(mid))ll = mid + <span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">else</span> rr = mid;<br>    &#125;<br>    <span class="hljs-keyword">return</span> ll;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">()</span> </span>&#123;<br>    cin &gt;&gt; n &gt;&gt; L;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; ++i)cin &gt;&gt; a[i];<br>    LL cnt = <span class="hljs-built_in">ef</span>(<span class="hljs-number">0</span>, <span class="hljs-number">1e15</span>);<br>    cout &lt;&lt; cnt &lt;&lt; <span class="hljs-string">&quot;\n&quot;</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>    cin.<span class="hljs-built_in">tie</span>(<span class="hljs-literal">nullptr</span>);<br>    <span class="hljs-type">int</span> tt = <span class="hljs-number">1</span>;<br><span class="hljs-comment">//    cin &gt;&gt; tt;</span><br>    <span class="hljs-keyword">while</span> (tt--) <span class="hljs-built_in">solve</span>();<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>计算机</category>
      
      <category>算法竞赛</category>
      
      <category>查询算法</category>
      
      <category>二分查找</category>
      
    </categories>
    
    
    <tags>
      
      <tag>二分</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>二分查找详解</title>
    <link href="/2024/11/06/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE%E8%AF%A6%E8%A7%A3/"/>
    <url>/2024/11/06/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE%E8%AF%A6%E8%A7%A3/</url>
    
    <content type="html"><![CDATA[<h1 id="二分查找详解"><a href="#二分查找详解" class="headerlink" title="二分查找详解"></a>二分查找详解</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>二分查找作为程序员的一项基本技能，是面试官最常使用来考察程序员基本素质的算法之一，也是解决很多查找类题目的常用方法，它可以达到O(log n)的时间复杂度。</p><p>一般而言，当一个题目出现以下特性时，你就应该立即联想到它可能需要使用二分查找：</p><ol><li>待查找的数组有序或者部分有序</li><li>要求时间复杂度低于O(n)，或者直接要求时间复杂度为O(log n)</li></ol><h2 id="模板一（查找左边界）"><a href="#模板一（查找左边界）" class="headerlink" title="模板一（查找左边界）"></a>模板一（查找左边界）</h2><p>整个区间分为左区间: [ll, mid], 右区间: [mid + 1, rr]</p><p>左区间满足性质A: 小于x</p><p>右区间满足性质B: 大于等于x</p><p>目标是找到大于等于x的第一个点，即右区间的第一个点</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> N = <span class="hljs-number">1e5</span> + <span class="hljs-number">5</span>;<br><span class="hljs-type">int</span> n, x, a[N];<br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment"> * 性质A:小于x</span><br><span class="hljs-comment"> * 性质B:大于等于x</span><br><span class="hljs-comment"> * 目标:大于等于x的第一个数</span><br><span class="hljs-comment"> * 整个区间分为左区间: [ll, mid], 右区间: [mid + 1, rr]</span><br><span class="hljs-comment"> * 左区间满足性质A, 右区间满足性质B, 目标是右区间的第一个点</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">ef</span><span class="hljs-params">(<span class="hljs-type">int</span> ll, <span class="hljs-type">int</span> rr, <span class="hljs-type">int</span> x)</span> </span>&#123;<br>    <span class="hljs-keyword">if</span> (ll &gt;= rr)<span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;<br>    <span class="hljs-keyword">while</span> (ll &lt; rr) &#123;<br>        <span class="hljs-type">int</span> mid = ll + rr &gt;&gt; <span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">if</span> (a[mid] &lt; x)ll = mid + <span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">else</span> rr = mid;<br>    &#125;<br>    <span class="hljs-keyword">return</span> ll;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">()</span> </span>&#123;<br>    cin &gt;&gt; n &gt;&gt; x;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; ++i)cin &gt;&gt; a[i];<br>    cout &lt;&lt; <span class="hljs-built_in">ef</span>(<span class="hljs-number">1</span>, n, x) &lt;&lt; <span class="hljs-string">&quot;\n&quot;</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-number">0</span>);<br>    cin.<span class="hljs-built_in">tie</span>(<span class="hljs-literal">nullptr</span>);<br>    <span class="hljs-type">int</span> tt = <span class="hljs-number">1</span>;<br><span class="hljs-comment">//    cin&gt;&gt;tt;</span><br>    <span class="hljs-keyword">while</span> (tt--)<span class="hljs-built_in">solve</span>();<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="模板二（查找右边界）"><a href="#模板二（查找右边界）" class="headerlink" title="模板二（查找右边界）"></a>模板二（查找右边界）</h2><p>整个区间分为左区间: [ll, mid], 右区间: [mid + 1, rr]</p><p>左区间满足性质A: 小于等于x</p><p>右区间满足性质B: 大于x</p><p>目标是找到小于等于x的最后一个点，即左区间的最后一个点</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> N = <span class="hljs-number">1e5</span> + <span class="hljs-number">5</span>;<br><span class="hljs-type">int</span> n, x, a[N];<br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment"> * 性质A:小于等于x</span><br><span class="hljs-comment"> * 性质B:大于x</span><br><span class="hljs-comment"> * 目标:等于x的最后一个数</span><br><span class="hljs-comment"> * 整个区间分为左区间: [ll, mid], 右区间: [mid + 1, rr]</span><br><span class="hljs-comment"> * 左区间满足性质A, 右区间满足性质B, 目标是左区间的最后一个点</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">ef</span><span class="hljs-params">(<span class="hljs-type">int</span> ll, <span class="hljs-type">int</span> rr, <span class="hljs-type">int</span> x)</span> </span>&#123;<br>    <span class="hljs-keyword">if</span> (ll &gt;= rr)<span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;<br>    <span class="hljs-keyword">while</span> (ll &lt; rr) &#123;<br>        <span class="hljs-type">int</span> mid = ll + rr + <span class="hljs-number">1</span> &gt;&gt; <span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">if</span> (a[mid] &gt; x)rr = mid - <span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">else</span> ll = mid;<br>    &#125;<br>    <span class="hljs-keyword">return</span> ll;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">()</span> </span>&#123;<br>    cin &gt;&gt; n &gt;&gt; x;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; ++i)cin &gt;&gt; a[i];<br>    cout &lt;&lt; <span class="hljs-built_in">ef</span>(<span class="hljs-number">1</span>, n, x) &lt;&lt; <span class="hljs-string">&quot;\n&quot;</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-number">0</span>);<br>    cin.<span class="hljs-built_in">tie</span>(<span class="hljs-literal">nullptr</span>);<br>    <span class="hljs-type">int</span> tt = <span class="hljs-number">1</span>;<br><span class="hljs-comment">//    cin&gt;&gt;tt;</span><br>    <span class="hljs-keyword">while</span> (tt--)<span class="hljs-built_in">solve</span>();<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>计算机</category>
      
      <category>算法竞赛</category>
      
      <category>查询算法</category>
      
      <category>二分查找</category>
      
    </categories>
    
    
    <tags>
      
      <tag>二分</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>文章标题</title>
    <link href="/2024/11/06/hello-world/"/>
    <url>/2024/11/06/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    <categories>
      
      <category>计算机</category>
      
      <category>算法竞赛</category>
      
      <category>数据结构</category>
      
      <category>树状数组</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>Fluid</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
